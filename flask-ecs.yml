AWSTemplateFormatVersion: "2010-09-09"
Description: ECS Fargate setup for Flask app running on port 5000

Resources:
  # -------------------------
  # Networking (VPC + Subnet + IGW)
  # -------------------------
  FlaskVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: flask-vpc

  FlaskInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: flask-igw

  FlaskVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref FlaskInternetGateway
      VpcId: !Ref FlaskVPC

  FlaskSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref FlaskVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: flask-subnet

  FlaskRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref FlaskVPC

  FlaskRoute:
    Type: AWS::EC2::Route
    DependsOn: FlaskVPCGatewayAttachment
    Properties:
      RouteTableId: !Ref FlaskRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref FlaskInternetGateway

  FlaskSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref FlaskSubnet
      RouteTableId: !Ref FlaskRouteTable

  FlaskSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow Flask traffic and ECR access
      VpcId: !Ref FlaskVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5000
          ToPort: 5000
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0

  # -------------------------
  # IAM Role for ECS Tasks
  # -------------------------
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: flask-task-execution-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # -------------------------
  # ECR Repository
  # -------------------------
  FlaskECRRepo:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: flask-app-repo

  # -------------------------
  # ECS Cluster
  # -------------------------
  FlaskCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: my-ecs-cluster

  # -------------------------
  # ECS Task Definition
  # -------------------------
  FlaskTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: my-task-def
      Cpu: "256"
      Memory: "512"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: flask-app
          Image: !Sub "${FlaskECRRepo.RepositoryUri}:latest"
          Essential: true
          PortMappings:
            - ContainerPort: 5000
              HostPort: 5000

  # -------------------------
  # ECS Service
  # -------------------------
  FlaskService:
    Type: AWS::ECS::Service
    DependsOn: FlaskVPCGatewayAttachment
    Properties:
      ServiceName: flask-app-service
      Cluster: !Ref FlaskCluster
      TaskDefinition: !Ref FlaskTaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref FlaskSecurityGroup
          Subnets:
            - !Ref FlaskSubnet

Outputs:
  ClusterName:
    Description: ECS Cluster name
    Value: !Ref FlaskCluster

  ServiceName:
    Description: ECS Service name
    Value: !Ref FlaskService

  ECRRepositoryURI:
    Description: URI of the ECR repository
    Value: !GetAtt FlaskECRRepo.RepositoryUri

  TaskDefinition:
    Description: ECS Task Definition name
    Value: !Ref FlaskTaskDefinition

name: CI - Build & Push Docker Image

on:
  push:
    branches: [ "main" ]   # runs when you push to main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Ensure repository exists
      - name: Ensure ECR repository exists
        env:
          ECR_REPOSITORY: flask-app-repo
        run: |
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region us-east-1 || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY --region us-east-1

      # Step 5: Build, tag, and push Docker image
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: flask-app-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build Docker image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

          # Push image to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Step 6: Save image tag for CD (deployment)
      - name: Save image tag for CD
        run: echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

name: Deploy to Elastic Container Service

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code (needed for task-def.json)
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Login to Amazon ECR (so ECS agent can pull)
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Render ECS task definition with new image
      - name: Render Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs-task-def.json
          container-name: flask-container-1   # must match container name in task def
          image: 957839002008.dkr.ecr.us-east-1.amazonaws.com/flask-app-repo:${{ github.sha }}

      # Step 5: Deploy ECS service with new task definition
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: app-service-1       # replace with your ECS service name
          cluster: app-cluster-1       # replace with your ECS cluster name
